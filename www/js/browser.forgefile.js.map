{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "../spinal-lib-forgefile/forgefile.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()",
    "// Copyright 2015 SpinalCom  www.spinalcom.com\n\n// This file is part of SpinalCore.\n\n// SpinalCore is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// Soda is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with Soda. If not, see <http://www.gnu.org/licenses/>.\nvar exports = module.exports = {};\n\nvar ForgeFileDerivativesItem = class ForgeFileDerivativesItem extends Model {\n  constructor(params) {\n    super();\n    if (!params) {\n      params = {};\n    }\n    if ((params != null ? params.name : void 0) == null) {\n      params.name = \"unnamed\";\n    }\n    if ((params != null ? params.path : void 0) == null) {\n      params.path = \".\";\n    }\n    this.add_attr({\n      name: params.name,\n      path: params.path\n    });\n    this._name = this.name;\n  }\n\n  add_child(child) {\n    this._children.push(child);\n  }\n\n  accept_child(ch) {\n    return false;\n  }\n};\n\nexports.ForgeFileDerivativesItem = ForgeFileDerivativesItem;\n\nvar ForgeFileItem = class ForgeFileItem extends Model {\n  constructor(name = \"Forge File\") {\n    super();\n    let tmp = {\n      _name: name,\n      _viewable: false,\n      _children: [],\n      name: name,\n      filepath: new Path(),\n      state: new Choice(0, [\"Initial\",\n        \"Uploading\", \"Uploading completed\",\n        \"Uploading to forge\", \"Upload to forge completed\",\n        \"Translating\", \"Translating completed\",\n        \"Export completed\", \"Failed\"\n      ]),\n      urn: \"\",\n      ask_token: false,\n      oauth: \"\",\n      bucket_key: \"\"\n    };\n    this.add_attr(tmp);\n  }\n  add_child(child) {\n    this._children.push(child);\n  }\n  accept_child(ch) {\n    return (ch instanceof ForgeFileDerivativesItem);\n  }\n};\n\nexports.ForgeFileItem = ForgeFileItem;\n\n\nvar ThemeModel = class ThemeModel extends Model {\n  constructor(){\n    super()\n    this.add_attr({\n      name : \"\",\n      owner : \"\",\n      username : \"\",\n      creation : Date.now(),\n      listModel : []\n    })\n  }\n  \n  get_obj() {\n    let obj = {\n      name : this.name.get(),\n      owner : this.owner.get(),\n      username : this.username.get(),\n      creation : this.creation.get(),\n      listModel : [],\n      _server_id : this._server_id\n    }\n\n    for (var i = 0; i < this.listModel.length; i++) {\n      obj.listModel.push(this.listModel[i].get_obj());\n    }\n\n    return obj;\n  }\n\n}\n\nexports.ThemeModel = ThemeModel;\n\n\nvar NoteModel = class NoteModel extends Model {\n  constructor(name = \"NoteModel\") {\n    super();\n\n    this.add_attr({\n      title: '',\n      color: '',\n      owner: '',\n      username : '',\n      date: Date.now(),\n      allObject: [],\n      notes : [],\n      display : false,\n      files : new Directory()\n    });\n  }\n\n  get_obj() {\n    let obj = {\n      title: this.title.get(),\n      color: this.color.get(),\n      owner: this.owner.get(),\n      username : this.username.get(),\n      date: this.date.get(),\n      allObject: [],\n      notes : [],\n      display : this.display.get(),\n      files : this.files.get(),\n      _server_id : this._server_id\n    }\n\n    for (var i = 0; i < this.allObject.length; i++) {\n      obj.allObject.push(this.allObject[i])\n    }\n\n    for (var i = 0; i < this.notes.length; i++) {\n      obj.notes.push(this.notes[i].get_obj())\n    }\n    return obj;\n  }\n\n\n\n}\nexports.NoteModel = NoteModel;\n\n\nvar MessageModel = class MessageModel extends Model {\n  constructor() {\n    super();\n    this.add_attr({\n      username : '',\n      owner : '',\n      message : '',\n      date : Date.now()\n    });\n  }\n  \n  get_obj() {\n    let obj = {\n      username : this.username.get(),\n      owner : this.owner.get(),\n      message : this.message.get(),\n      date : this.date.get(),\n      _server_id : this._server_id\n    }\n\n    return obj;\n  }\n}\n\nexports.MessageModel = MessageModel;\n\n\nvar FileModel = class FileModel extends Model {\n  constructor(file) {\n    super();\n    this.add_attr({\n      username : '',\n      owner : '',\n      name : '',\n      date : '',\n      path : new Path()\n    })\n  }\n\n  get_obj() {\n    let obj = {\n      username : this.username.get(),\n      owner : this.owner.get(),\n      name : this.name.get(),\n      date : this.date.get(),\n      _server_id : this._server_id\n    }\n\n    return obj;\n\n  }\n\n}\nexports.FileModel = FileModel;\n"
  ]
}